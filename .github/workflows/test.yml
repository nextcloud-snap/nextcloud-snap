name: Run tests against changes

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
      - develop
      - '[0-9]+'
    tags:
      - '*'

jobs:
  static:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install dependencies
        run: sudo apt-get update -qq && sudo apt-get install -qq shellcheck

      - name: Run tests
        run: ./tests/run-tests.sh static

  unit:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install dependencies
        run: sudo apt-get update -qq && sudo apt-get install -qq curl git

      - name: Run tests
        run: ./tests/run-tests.sh unit

  integration:
    runs-on: ubuntu-22.04

    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install dependencies
        run: sudo apt-get update -qq && sudo snap refresh lxd && sudo lxd init --auto && sudo snap install --classic --channel=7.x/stable snapcraft

      # See https://andreas.scherbaum.la/post/2023-01-18_fix-lxc-network-issues-in-ubuntu-22.04/  
      - name: Disable Docker firewall
        run: sudo iptables -I DOCKER-USER -i lxdbr0 -o eth0 -j ACCEPT && sudo iptables -I DOCKER-USER -o lxdbr0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

      # Using sudo here because our CI user isn't a member of the lxd group
      - name: Build snap
        run: sudo snapcraft --provider lxd

      - name: Review snap
        run: sudo snap install review-tools && /snap/bin/review-tools.snap-review *.snap

      - name: Install the snap
        run: sudo snap install *.snap --dangerous

      - name: Setup ruby
        uses: ruby/setup-ruby@a4effe49ee8ee5b8b5091268c473a4628afb5651 # v1.245.0
        with:
          working-directory: tests
          bundler-cache: true

      - name: Run integration tests
        working-directory: tests
        run: bundle exec ./run-tests.sh integration

      - name: Upload snap artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: snap
          path: '*.snap'
