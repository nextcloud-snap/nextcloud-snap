#!/bin/sh

DEFAULT_HTTP_PORT="80"
DEFAULT_HTTPS_PORT="443"
DEFAULT_SERVER_PROTOCOLS="http/1.1"
export APACHE_PIDFILE="/tmp/pids/httpd.pid"

mkdir -p -m 750 "$(dirname $APACHE_PIDFILE)"

restart_apache_if_running()
{
	if apache_is_running; then
		# Restart apache by stopping it and letting systemd start it again.
		pid="$(apache_pid)"
		echo -n "Restarting apache... "
		output=$(httpd-wrapper -k stop 2>&1)
		if [ $? -eq 0 ]; then
			while kill -0 $pid 2>/dev/null; do
				sleep 1
			done
			echo "done"
		else
			echo "error"
			echo "$output"
			return 1
		fi
	fi
}

apache_is_running()
{
	[ -f "$APACHE_PIDFILE" ]
}

wait_for_apache()
{
	if ! apache_is_running; then
		echo -n "Waiting for Apache... "
		while ! apache_is_running; do
			sleep 1
		done
		echo "done"
	fi
}

apache_pid()
{
	if apache_is_running; then
		cat "$APACHE_PIDFILE"
	else
		echo "Unable to get Apache PID as it's not yet running" >&2
		echo ""
	fi
}

apache_http_port()
{
	port="$(snapctl get ports.http)"
	if [ -z "$port" ]; then
		port="$DEFAULT_HTTP_PORT"
		apache_set_http_port $port
		apache_set_previous_http_port $port
	fi

	echo "$port"
}

apache_set_http_port()
{
	snapctl set ports.http="$1"
}

apache_https_port()
{
	port="$(snapctl get ports.https)"
	if [ -z "$port" ]; then
		port="$DEFAULT_HTTPS_PORT"
		apache_set_https_port $port
		apache_set_previous_https_port $port
	fi

	echo "$port"
}

apache_set_https_port()
{
	snapctl set ports.https="$1"
}

apache_previous_http_port()
{
	echo "$(snapctl get private.ports.http)"
}

apache_set_previous_http_port()
{
	snapctl set private.ports.http="$1"
}

apache_previous_https_port()
{
	echo "$(snapctl get private.ports.https)"
}

apache_set_previous_https_port()
{
	snapctl set private.ports.https="$1"
}

apache_previous_http2_status()
{
	echo "$(snapctl get private.apache.http2)"
}

apache_set_previous_http2_status()
{
	snapctl set private.apache.http2="$1"
}

apache_set_http2_status()
{
	snapctl set apache.http2="$1"
}

apache_server_protocols()
{
	http2="$(snapctl get apache.http2)"

	if [[ -z "$http2" ]]; then
		http2="false"
		apache_set_http2_status "false"
		apache_set_previous_https_port "false"

		echo $DEFAULT_SERVER_PROTOCOLS
		return 0
	fi

	if [[ "$http2" -eq "true" ]]; then
		echo "h2 h2c http/1.1"
	else
		echo "http/1.1"
	fi
}
