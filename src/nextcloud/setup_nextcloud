#!/bin/sh

# Make sure nextcloud directory exists
# FIXME: Use common environment variable when it exists
mkdir -p -m 750 $SNAP_DATA/../common/nextcloud

# Make sure nextcloud tmp directory exists
# FIXME: Use common environment variable when it exists
mkdir -p -m 750 $SNAP_DATA/../common/nextcloud/tmp

# Make sure nextcloud extra-apps directory exists (for user apps)
mkdir -p -m 750 $SNAP_DATA/nextcloud/extra-apps

# If this is a new install, make sure it's configured correctly
NEXTCLOUD_CONFIG_DIR=$SNAP_DATA/nextcloud/config
if [ ! -d "$NEXTCLOUD_CONFIG_DIR" ]; then
	echo "Configuring nextcloud..."
	cp -r $SNAP/htdocs/config $NEXTCLOUD_CONFIG_DIR
fi

# Wait for PHP FPM to be up and running before continuing, since we need to make
# sure we can run the upgrade process below.
php_pid_file_path=$SNAP_DATA/php/php-fpm.pid
echo "Waiting for PHP..."
while [ ! -f "$php_pid_file_path" ]; do
	sleep 1
done

# Finally, make sure nextcloud is up to date. The return code of the upgrade
# can be used to determine the outcome:
#    succes = 0;
#    not installed = 1;
#    in maintenance mode = 2;
#    already up to date = 3;
#    invalid arguments  = 4;
#    other failure = 5;
echo "Making sure nextcloud is fully upgraded..."
occ upgrade --no-interaction
return_code=$?
if [ $return_code -eq 1 ]; then
	echo "Nextcloud is not yet installed-- no upgrade necessary"
elif [ $return_code -eq 3 ]; then
	echo "Nextclout is fully upgraded"
elif [ $return_code -ne 0 ]; then
	echo "Unable to upgrade Nextcloud. Will try again."
	# occ may have left it in maintenance mode, so turn that off
	occ maintenance:mode --off
	sleep 10 # Delaying here so systemd doesn't throttle us
	exit 1
fi
