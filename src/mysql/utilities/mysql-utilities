#!/bin/sh

# shellcheck source=src/common/utilities/common-utilities
. "$SNAP/utilities/common-utilities"

export MYSQL_PIDFILE="/tmp/pids/mysql.pid"
export MYSQL_SOCKET="/tmp/sockets/mysql.sock"
export NEXTCLOUD_PASSWORD_FILE="$SNAP_DATA/mysql/nextcloud_password"
MYSQL_SETUP_LOCKFILE="/tmp/locks/mysql-setup"

mkdir -p "$(dirname "$MYSQL_PIDFILE")"
mkdir -p "$(dirname "$MYSQL_SOCKET")"
mkdir -p "$(dirname "$MYSQL_SETUP_LOCKFILE")"
chmod 750 "$(dirname "$MYSQL_PIDFILE")"
chmod 750 "$(dirname "$MYSQL_SOCKET")"
chmod 750 "$(dirname "$MYSQL_SETUP_LOCKFILE")"

mysql_is_running()
{
	# Arguments:
	#  -f: Force the check, i.e. ignore if it's currently in setup
	[ -f "$MYSQL_PIDFILE" ] && [ -S "$MYSQL_SOCKET" ] && (! mysql_setup_running || [ "$1" = "-f" ])
}

wait_for_mysql()
{
	# Arguments:
	#  -f: Force the check, i.e. ignore if it's currently in setup
	wait_for_command "Waiting for MySQL" mysql_is_running "$@"
}

mysql_setup_running()
{
	[ -f "$MYSQL_SETUP_LOCKFILE" ]
}

set_mysql_setup_running()
{
	touch "$MYSQL_SETUP_LOCKFILE"
}

set_mysql_setup_not_running()
{
	rm -f "$MYSQL_SETUP_LOCKFILE"
}

mysql_pid()
{
	if mysql_is_running ""; then
		cat "$MYSQL_PIDFILE"
	else
		echo "Unable to get MySQL PID as it's not yet running" >&2
		echo ""
	fi
}

mysql_set_nextcloud_password()
{
	echo "$1" > "$NEXTCLOUD_PASSWORD_FILE"
	chmod 600 "$NEXTCLOUD_PASSWORD_FILE"
}

mysql_get_nextcloud_password()
{
	if [ -f "$NEXTCLOUD_PASSWORD_FILE" ]; then
		cat "$NEXTCLOUD_PASSWORD_FILE"
	else
		echo "MySQL Nextcloud password has not yet been generated" >&2
		echo ""
	fi
}
