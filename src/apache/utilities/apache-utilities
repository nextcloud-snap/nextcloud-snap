#!/bin/sh

# shellcheck source=src/common/utilities/common-utilities
. "$SNAP/utilities/common-utilities"

DEFAULT_HTTP_PORT="80"
DEFAULT_HTTPS_PORT="443"
export APACHE_PIDFILE="/tmp/pids/httpd.pid"

mkdir -p "$(dirname $APACHE_PIDFILE)"
chmod 750 "$(dirname $APACHE_PIDFILE)"

restart_apache_if_running()
{
	if apache_is_running; then
		# Restart apache by stopping it and letting systemd start it again.
		pid="$(apache_pid)"
		printf "Restarting apache... "
		if output="$(httpd-wrapper -k stop 2>&1)"; then
			while kill -0 "$pid" 2>/dev/null; do
				sleep 1
			done
			printf "done\n"
		else
			printf "error\n"
			echo "$output"
			return 1
		fi
	fi
}

apache_is_running()
{
	[ -f "$APACHE_PIDFILE" ]
}

wait_for_apache()
{
	wait_for_command "Waiting for Apache" apache_is_running
}

apache_pid()
{
	if apache_is_running; then
		cat "$APACHE_PIDFILE"
	else
		echo "Unable to get Apache PID as it's not yet running" >&2
		echo ""
	fi
}

apache_http_port()
{
	port="$(snapctl get ports.http)"
	if [ -z "$port" ]; then
		port="$DEFAULT_HTTP_PORT"
		apache_set_http_port $port
		apache_set_previous_http_port $port
	fi

	echo "$port"
}

apache_set_http_port()
{
	snapctl set ports.http="$1"
}

apache_https_port()
{
	port="$(snapctl get ports.https)"
	if [ -z "$port" ]; then
		port="$DEFAULT_HTTPS_PORT"
		apache_set_https_port $port
		apache_set_previous_https_port $port
	fi

	echo "$port"
}

apache_set_https_port()
{
	snapctl set ports.https="$1"
}

apache_previous_http_port()
{
	snapctl get private.ports.http
}

apache_set_previous_http_port()
{
	snapctl set private.ports.http="$1"
}

apache_previous_https_port()
{
	snapctl get private.ports.https
}

apache_set_previous_https_port()
{
	snapctl set private.ports.https="$1"
}
